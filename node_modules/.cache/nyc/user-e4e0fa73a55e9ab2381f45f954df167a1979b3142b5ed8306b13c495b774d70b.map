{"version":3,"sources":["user.js"],"names":["userSignUp","req","res","next","User","find","email","body","exec","then","user","length","status","json","message","bcrypt","hash","password","err","error","_id","mongoose","Types","ObjectId","save","result","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAI,SAAdA,UAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpCC,oBAAKC,IAAL,CAAU;AAACC,IAAAA,KAAK,EAAEL,GAAG,CAACM,IAAJ,CAASD;AAAjB,GAAV,EACEE,IADF,GAEEC,IAFF,CAEO,UAAAC,IAAI,EAAI;AACX,QAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE;AADe,OAArB,CAAP;AAGH,KAJD,MAIO;AACHC,yBAAOC,IAAP,CAAYf,GAAG,CAACM,IAAJ,CAASU,QAArB,EAA+B,EAA/B,EAAmC,UAACC,GAAD,EAAMF,IAAN,EAAe;AAC9C,YAAGE,GAAH,EAAQ;AACJ,iBAAOhB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBM,YAAAA,KAAK,EAAED;AADiB,WAArB,CAAP;AAGH,SAJD,MAIO;AACH,cAAMR,KAAI,GAAG,IAAIN,iBAAJ,CAAS;AAClBgB,YAAAA,GAAG,EAAE,IAAIC,qBAASC,KAAT,CAAeC,QAAnB,EADa;AAElBjB,YAAAA,KAAK,EAAEL,GAAG,CAACM,IAAJ,CAASD,KAFE;AAGlBW,YAAAA,QAAQ,EAAED;AAHQ,WAAT,CAAb;;AAKAN,UAAAA,KAAI,CACHc,IADD,GAECf,IAFD,CAEM,UAAAgB,MAAM,EAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAvB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAE;AADQ,aAArB;AAGH,WAPD,WAQO,UAAAI,GAAG,EAAI;AACVQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAhB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBM,cAAAA,KAAK,EAAED;AADU,aAArB;AAGH,WAbD;AAcH;AACJ,OA1BD;AA2BH;AACH,GApCF;AAqCH,CAtCD;;eAuCelB,U","sourceRoot":"/Users/andela/Desktop/Mybrand/server/controllers/","sourcesContent":["import User from '../models/user';\nimport bcrypt from 'bcrypt';\nimport mongoose from 'mongoose'\n\nconst userSignUp =  (req, res, next) => {\n    User.find({email: req.body.email })\n     .exec()\n     .then(user => {\n        if (user.length >= 1) {\n            return res.status(409).json({\n                message: 'Mail exists'\n            });\n        } else {\n            bcrypt.hash(req.body.password, 10, (err, hash) => {   \n                if(err) {\n                    return res.status(500).json({\n                        error: err\n                    });\n                } else {\n                    const user = new User({\n                        _id: new mongoose.Types.ObjectId(), \n                        email: req.body.email,\n                        password: hash\n                    });\n                    user\n                    .save()\n                    .then(result => {\n                        console.log(result);\n                        res.status(201).json({\n                            message: 'User created'\n                        });  \n                    })\n                    .catch(err => {\n                        console.log(err);\n                        res.status(500).json({\n                            error: err\n                        });\n                    });\n                }\n            })\n        }\n     }) \n}\nexport default userSignUp"]}